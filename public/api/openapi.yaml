openapi: '3.0.1'
info:
  title: ChatOnline
  description: Aplicação de Chat Online.
    Esse serviço implementa um Chat Online. No Chat Online, os usuários podem ler e escrever mensagens. 
    O usuário possui um perfil que ele pode editar os atributos como desejar. 
    Existe também o usuário administrador que pode fazer todo que um usuário comum faz, 
    com adição de banir um usuário e ver a lista de usuários.

  version: '1.1'
servers:
  - url: http://{host}:{porta}/api
    variables:
      host:
        default: localhost
      porta:
        default: '8000'

paths:
  /chat:
    get:
      operationId: getMessage
      summary: Retorna o chat.
      responses:
        '200':
          description: 'Sucesso'
          content: 
            application/json:
              schema:
                type: array
                minItems: 0
                items:
                  $ref: '#/components/schemas/mensagem'
    
    post:
      summary: Mandar uma mensagem.
      operationId: postMessage
      security:
        - bearer: []
        - oauth2: []
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mensagem:
                  $ref: '#/components/schemas/mensagem/properties/mensagem'
      responses:
        '201':
          description: Mensagem enviada.
          links:
            getPublicacaoById:
              description: O URI da mensagem enviada.
              operationId: getMessage
              parameters:
                id: $response.header.location

  /chat/{id}:
    parameters:
      - nome:
        $ref: "#/components/parameters/idMensagem"

    get:
      summary: Retorna os dados de uma mensagem.
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mensagem'
        '404':
          description: Mensagem não encontrado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/msg"
    
    put:
      summary: Cria ou altera os dados de uma mensagem.
      responses:
        '200':
          description: Dados alterados.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/msg"
        '201':
          description: Dados criados.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/msg"

    delete:
      summary: Apaga uma mensagem.
      responses:
        '200':
          description: 'Mensagem apagada'
        '404':
          description: Mensagem não encontrada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/msg"


components:
  schemas:  
    mensagem:
      type: object
      description: Uma mensagem.
      properties:
        id:
          type: string
          description: Um identificador gerado pelo sistema.
          example: '01'
        usuario:
          type: "string"
          description: O dono da mensagem.
          example: Vanessa
        mensagem:
          type: string
          maxLength: 350
          example: Sou tão linda
        enviada:
          type: string
          format: date-time

    msg:
      type: object
      properties:
        tipo:
          type: string
          enum: [info, erro]
        conteudo:
          type: string


  responses:
    200:
      description: Ok.

    201:
      description: Recurso criado.

    400:
      description: Requisição inválida.
    
    404:
      description: Recurso não encontrado.


  parameters:
    idMensagem:
      in: path
      name: id
      required: true
      schema:
        $ref: '#components/mensagem/properties/id'